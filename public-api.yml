openapi: 3.0.0
info:
  title: Utility Billing SaaS API
  description: API for managing utility billing
  version: 1.0.0
servers:
  - url: https://api.aeneassoftware.com/v1
paths:
  /accounts:
    get:
      summary: Get list of accounts
      tags:
        - accounts
      operationId: getaccounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Create a new account
      tags:
        - accounts
      operationId: createaccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '201':
          description: Created account data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /accounts/{accountId}:
    get:
      summary: Get a specific account
      tags:
        - accounts      
      operationId: getaccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: account data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      summary: Update a specific account
      tags:
        - accounts      
      operationId: updateaccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: Updated account data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      summary: Delete a specific account
      tags:
        - accounts
      operationId: deleteaccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: account deleted
  /serviceOrders:
    get:
      summary: Get list of service orders
      tags:
        - service orders
      operationId: getServiceOrders
      responses:
        '200':
          description: List of service orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOrder'
    post:
      summary: Create a new service order
      tags:
        - service orders
      operationId: createServiceOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrder'
        required: true
      responses:
        '201':
          description: Created service order data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrder'
  /serviceOrders/{serviceOrderId}:
    get:
      summary: Get a specific service order
      tags:
        - service orders
      operationId: getServiceOrder
      parameters:
        - name: serviceOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service order data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrder'
    put:
      summary: Update a specific service order
      tags:
        - service orders
      operationId: updateServiceOrder
      parameters:
        - name: serviceOrderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrder'
        required: true
      responses:
        '200':
          description: Updated service order data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrder'
    delete:
      summary: Delete a specific service order
      tags:
        - service orders
      operationId: deleteServiceOrder
      parameters:
        - name: serviceOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Service order deleted
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        type: 
          type: string
        mailing_address: 
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        contactNumber:
          type: string
        email:
          type: string
        balance:
          type: number
        status:
          type: string
        rate:
          type: string
    ServiceLocation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        active_customer_id:
          type: string
        meter_id:
          type: array
          items:  
            type: string
        address: 
          $ref: '#/components/schemas/Address'
        route:
          type: string
        sequence:
          type: int
        coordinates:
          type: string
    Meter:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        endpointId:
          type: string
        meterType:
          type: string
        coordinates:
          type: string
        installationDate:
          type: string
          format: date-time
        age:
          type: int
        warrantyEndDate:
          type: string
          format: date-time
        lastReadTime:
          type: string
          format: date-time
        lastReadValue:
          type: int
    ServiceOrder:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        accountIds:
          type: array
          items:  
            type: string
        serviceType:
          type: string
        serviceSubType:
          type: string
        serviceRequestedDate:
          type: string
          format: date-time
        serviceStartDate:
          type: string
          format: date-time
        serviceEndDate:
          type: string
          format: date-time
        description:
          type: string
        status:
          type: string
        assignee:
          type: string
        meterId:
          type: string
        meter:
          type: '#/components/schemas/Meter'
        lastRead:
          $ref: '#/components/schemas/MeterRead'
        meterRead:
          $ref: '#/components/schemas/MeterRead'
        averageUsage:
          type: number
        partsUsed:
          type: array
          items:
            type: string
        serviceNotes:
          type: string

    MeterRead:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        meterId:
          type: string
        readDate:
          type: string
          format: date-time
        read:
          type: int
    Address:
      type: object
      properties:
        street1:
          type: string          
        street2:
          type: string          
        city:
          type: string
        zipcode:
          type: string
        state:
          type: string
        country:
          type: string         
        
          
